
# 1 "user/src/rtc.c"

# 13 "/Applications/microchip/xc8/v1.40/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "/Applications/microchip/xc8/v1.40/include/stdbool.h"
typedef unsigned char bool;

# 18 "user/src/../inc/rtc.h"
typedef union {

struct {
uint8_t hour;
uint8_t minute;
uint8_t second;
};
uint8_t time[3];
} Time_t;

extern Time_t* RTC_GetTime();
extern void RTC_OnSecond();
extern bool RTC_SecondReady();
extern bool RTC_MinuteReady();
extern bool RTC_HourReady();

# 3 "user/src/rtc.c"
typedef struct
{
unsigned mSec : 1;
unsigned mMin : 1;
unsigned mHour : 1;
unsigned : 5;
}Status_t;

static Time_t rtc_time;
volatile Status_t rtc_status;

Time_t* RTC_GetTime ()
{
return &rtc_time;
}

void RTC_OnSecond()
{
rtc_time.second++;
if( rtc_time.second > 59 )
{
rtc_time.second = 0;
rtc_time.minute++;
if( rtc_time.minute > 59 )
{
rtc_time.minute = 0;
rtc_time.hour++;
if( rtc_time.hour > 23 )
{
rtc_time.hour = 0;
}
rtc_status.mHour = 1;
}
rtc_status.mMin = 1;
}
rtc_status.mSec = 1;
}

bool RTC_SecondReady()
{
if( rtc_status.mSec )
{
rtc_status.mSec = 0;
return 1;
}
return 0;
}

bool RTC_MinuteReady()
{
if( rtc_status.mMin )
{
rtc_status.mMin = 0;
return 1;
}
return 0;
}

bool RTC_HourReady()
{
if( rtc_status.mHour )
{
rtc_status.mHour = 0;
return 1;
}
return 0;
}
